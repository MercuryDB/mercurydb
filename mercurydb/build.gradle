apply plugin: 'application'
apply plugin: 'maven' 
apply plugin: 'signing'

group = 'com.github.mercurydb'
version = '0.6.2'

def ossrhUsername = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : null
def ossrhPassword = project.hasProperty('ossrhPassword') ?  project.property('ossrhPassword') : null

dependencies {
    compile 'com.google.guava:guava:18.0'
    compile 'commons-io:commons-io:2.4'
    compile 'com.github.spullara.mustache.java:compiler:0.9.0'
    compile 'org.javassist:javassist:3.19.0-GA'
    compile 'commons-cli:commons-cli:1.3'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar, javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword) 
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword) 
            }
            
            pom.project {
               name 'MercuryDB'
               packaging 'jar'
               description 'A non-persistent main-memory database in Java! See our Github page for more details'
               url 'http://github.com/MercuryDB'
               
               scm {
                   url 'scm:git@github.com:MercuryDB/mercurydb.git'
                   connection 'scm:git@github.com:MercuryDB/mercurydb.git'
                   developerConnection 'scm:git@github.com:MercuryDB/mercurydb.git'
               }
 
               licenses {
                   license {
                       name 'MIT License'
                       url 'http://opensource.org/licenses/MIT'
                       distribution 'repo'
                   }
               }
 
               developers {
                   developer {
                       id 'colestew'
                       name 'Cole Stewart'
                       email 'tcstewart09@gmail.com'
                       organization 'The University of Texas at Austin'
                       organizationUrl 'http://www.cs.utexas.edu'
                   }
                   developer {
                       id 'dilijev'
                       name 'Doug Ilijev'
                       email 'doug.ilijev@gmail.com'
                       organization 'The University of Texas at Austin'
                       organizationUrl 'http://www.cs.utexas.edu'
                   }
               }
           }
        }
    }
}

uploadArchives.onlyIf {
    ossrhPassword != null && ossrhUsername != null
}

mainClassName = 'com.github.mercurydb.Main'

// this is the standard task for building the normal jar in build/libs/...
// this will run by default when you run 'gradle build' or 'gradle assemble'
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    } 
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Big MercuryDB Jar',  
            'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

